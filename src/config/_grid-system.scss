// // FLEXBOX CSS GRID
// // by Laptev Pavel

// VARiABLES
@import 'config/variables';

// $grid-large-desktop-columns: {map-get(map-get($variables, 'large-desktop-grid'), 'columns')};
// $grid-large-desktop-sideMargin: {map-get(map-get($variables, 'large-desktop-grid'), 'sideMargin')};
// $grid-large-desktop-gutter: {map-get(map-get($variables, 'large-desktop-grid'), 'gutter')};
// $grid-large-desktop-breakpoint: {map-get(map-get($variables, 'large-desktop-grid'), 'breakpoint')};


// $grid-desktop-columns: {map-get(map-get($variables, 'desktop-grid'), 'columns')};
// $grid-desktop-sideMargin: {map-get(map-get($variables, 'desktop-grid'), 'sideMargin')};
// $grid-desktop-gutter: {map-get(map-get($variables, 'desktop-grid'), 'gutter')};
// $grid-desktop-breakpoint: {map-get(map-get($variables, 'desktop-grid'), 'breakpoint')};


// $grid-tablet-columns: {map-get(map-get($variables, 'tablet-grid'), 'columns')};
// $grid-tablet-sideMargin: {map-get(map-get($variables, 'tablet-grid'), 'sideMargin')};
// $grid-tablet-gutter: {map-get(map-get($variables, 'tablet-grid'), 'gutter')};
// $grid-tablet-breakpoint: {map-get(map-get($variables, 'tablet-grid'), 'breakpoint')};


// $grid-mobile-columns: {map-get(map-get($variables, 'mobile-grid'), 'columns')};
// $grid-mobile-sideMargin: {map-get(map-get($variables, 'mobile-grid'), 'sideMargin')};
// $grid-mobile-gutter: {map-get(map-get($variables, 'mobile-grid'), 'gutter')};
// $grid-mobile-breakpoint: {map-get(map-get($variables, 'mobile-grid'), 'breakpoint')};




// FLEXBOX CSS GRID
// by Laptev Pavel

// VARiABLES

// large desktop grid
$grid-large-desktop-columns: 12;
$grid-large-desktop-sideMargin: 150px;
$grid-large-desktop-gutter: 10px;
$grid-large-desktop-breakpoint: 1040px;

// desktop grid
$grid-desktop-columns: 12;
$grid-desktop-sideMargin: 30px;
$grid-desktop-gutter: 10px;
$grid-desktop-breakpoint: 700px;

// tablet grid
$grid-tablet-columns: 12;
$grid-tablet-sideMargin: 100px;
$grid-tablet-gutter: 10px;
$grid-tablet-breakpoint: 375px;

// mobile grid
$grid-mobile-columns: 4;
$grid-mobile-sideMargin: 100px;
$grid-mobile-gutter: 20px;
$grid-mobile-breakpoint: 375px;



// pixels to % variables
// $mob-grid-width: 100% -
//   (($grid-mobile-sideMargin * 2 / $grid-mobile-breakpoint) * 100%);
$mob-grid-width: 100% -
  (($grid-mobile-sideMargin * 2 / $grid-mobile-breakpoint) * 100%);
$tab-grid-width: 100% -
  (($grid-tablet-sideMargin * 2 / $grid-tablet-breakpoint) * 100%);
$desk-grid-width: 100% -
  (($grid-desktop-sideMargin * 2 / $grid-desktop-breakpoint) * 100%);
$large-desktop-grid-width: 100% -
  (($grid-large-desktop-sideMargin * 2 / $grid-large-desktop-breakpoint) * 100%);

$mob-gutter: (
  (
      $grid-mobile-gutter /
        ($grid-mobile-breakpoint - ($grid-mobile-sideMargin * 2))
    ) * 100%
);
$tab-gutter: (
  (
      $grid-tablet-gutter /
        ($grid-tablet-breakpoint - ($grid-tablet-sideMargin * 2))
    ) * 100%
);
$desk-gutter: (
  (
      $grid-desktop-gutter /
        ($grid-desktop-breakpoint - ($grid-desktop-sideMargin * 2))
    ) * 100%
);
$large-desktop-gutter: (
  (
      $grid-large-desktop-gutter /
        ($grid-large-desktop-breakpoint - ($grid-large-desktop-sideMargin * 2))
    ) * 100%
);  

// FUNCTIONS AND MiXINS
@function col-width($i, $columns) {
  @return 100% / $columns * $i;
}

@mixin col-props($i, $columns, $gutter) {
  box-sizing: border-box;
  width: col-width($i, $columns);
  padding-left: $gutter/2;
  padding-right: $gutter/2;
}

@mixin columns-loop($name, $columns, $gutter) {
  @for $i from 0 through $columns {
    &-#{$name}-#{$i} {
      @include col-props($i, $columns, $gutter);
    }
    &-#{$name}-shift-#{$i} {
      margin-left: col-width($i, $columns);
    }
  }
}

@mixin grid-base($width) {
  box-sizing: border-box;
  display: flex;
  margin-left: auto;
  margin-right: auto;
  flex-wrap: wrap;
  min-width: $grid-mobile-breakpoint;
  width: $width;
}

// CLASSES
.grid {
  @include grid-base($mob-grid-width);
  
  @media screen and (min-width: $grid-tablet-breakpoint) {
    width: $tab-grid-width;
  }
  @media screen and (min-width: $grid-desktop-breakpoint) {
    width: $desk-grid-width;
  }
  @media screen and (min-width: $grid-large-desktop-breakpoint) {
    width: $large-desktop-grid-width;
  }
  &-0 {
    @include grid-base(100%);
  }
}

.col {
  @include columns-loop(mob, $grid-mobile-columns, $mob-gutter);
  @media screen and (min-width: $grid-tablet-breakpoint) {
    @include columns-loop(tab, $grid-tablet-columns, $tab-gutter);
  }
  @media screen and (min-width: $grid-desktop-breakpoint) {
    @include columns-loop(desk, $grid-desktop-columns, $desk-gutter);
  }
  @media screen and (min-width: $grid-large-desktop-breakpoint) {
    @include columns-loop(la-desk, $grid-large-desktop-columns, $large-desktop-gutter);
  }
}






















// // pixels to % variables
// $mob-grid-width: 100% -
// 	calc(($grid-mobile-sideMargin * 2 / $grid-mobile-breakpoint) * 100%);

// // $tab-grid-width: calc($grid-tablet-sideMargin * 2);
// $tab-grid-width: 100% -
//   calc(($grid-tablet-sideMargin * 2 / $grid-tablet-breakpoint) * 100%);
// $desk-grid-width: 100% -
// 	calc(($grid-desktop-sideMargin * 2 / $grid-desktop-breakpoint) * 100%);
// $large-desktop-grid-width: 100% -
// 	calc(($grid-large-desktop-sideMargin * 2 / $grid-large-desktop-breakpoint) * 100%);

// $mob-gutter: calc(
//   (
//       $grid-mobile-gutter /
// 			($grid-mobile-breakpoint - ($grid-mobile-sideMargin * 2))
//     ) * 100%
// );
// $tab-gutter: calc(
//   (
//       $grid-tablet-gutter /
// 			($grid-tablet-breakpoint - ($grid-tablet-sideMargin * 2))
//     ) * 100%
// );
// $desk-gutter: calc(
//   (
//       $grid-desktop-gutter /
// 			($grid-desktop-breakpoint - ($grid-desktop-sideMargin * 2))
//     ) * 100%
// );
// $large-desktop-gutter: calc(
//   (
//       $grid-large-desktop-gutter /
// 			($grid-large-desktop-breakpoint - ($grid-large-desktop-sideMargin * 2))
//     ) * 100%
// );  

// // FUNCTIONS AND MiXINS
// @function col-width($i, $columns) {
//   @return 100% / $columns * $i;
// }

// @mixin col-props($i, $columns, $gutter) {
//   box-sizing: border-box;
//   width: col-width($i, $columns);
//   padding-left: $gutter/2;
//   padding-right: $gutter/2;
// }

// @mixin columns-loop($name, $columns, $gutter) {
//   @for $i from 0 through $columns {
//     &-#{$name}-#{$i} {
//       @include col-props($i, $columns, $gutter);
//     }
//     &-#{$name}-shift-#{$i} {
//       margin-left: col-width($i, $columns);
//     }
//   }
// }

// @mixin grid-base($width) {
//   box-sizing: border-box;
//   display: flex;
//   margin-left: auto;
//   margin-right: auto;
//   flex-wrap: wrap;
//   min-width: $grid-mobile-breakpoint;
//   width: $width;
// }

// // CLASSES
// .grid {
//   @include grid-base($mob-grid-width);
  
//   @media screen and (min-width: $grid-tablet-breakpoint) {
//     width: $tab-grid-width;
//   }
//   @media screen and (min-width: $grid-desktop-breakpoint) {
//     width: $desk-grid-width;
//   }
//   @media screen and (min-width: $grid-large-desktop-breakpoint) {
//     width: $large-desktop-grid-width;
//   }
//   &-0 {
//     @include grid-base(100%);
//   }
// }

// .col {
//   @include columns-loop(mob, $grid-mobile-columns, $mob-gutter);
//   @media screen and (min-width: $grid-tablet-breakpoint) {
//     @include columns-loop(tab, $grid-tablet-columns, $tab-gutter);
//   }
//   @media screen and (min-width: $grid-desktop-breakpoint) {
//     @include columns-loop(desk, $grid-desktop-columns, $desk-gutter);
//   }
//   @media screen and (min-width: $grid-large-desktop-breakpoint) {
//     @include columns-loop(ldesk, $grid-large-desktop-columns, $mob-gutter);
//   }
// }


// .inner {
//   background-color: violet;
//   margin: 15px 0;
//   height: 200px;
// }

// p {
//   margin: 0;
//   padding: 10px;
// }

// .inner-desk-4 {
//   background-color: #C0C0C0;
// }

// .inner-desk-5 {
//   background-color: black	;
// }

// .inner-desk-6 {
//   background-color: #808080;
// }

// .inner-desk-7 {
//   background-color: #778899;
// }

// // .col-mob-4 {
// //   background-color: green;
// // }
// .full-width {
//   background-color: salmon;
//   height: 290px;
//   width: 100%;
// }
